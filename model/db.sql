-- MySQL Script generated by MySQL Workbench
-- 03/28/17 17:21:38
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema appDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `appDB` ;

-- -----------------------------------------------------
-- Schema appDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `appDB` DEFAULT CHARACTER SET utf8 ;
USE `appDB` ;

-- -----------------------------------------------------
-- Table `appDB`.`formations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `appDB`.`formations` ;

CREATE TABLE IF NOT EXISTS `appDB`.`formations` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `name_UNIQUE` (`name` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `appDB`.`units`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `appDB`.`units` ;

CREATE TABLE IF NOT EXISTS `appDB`.`units` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `formation` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_units_formations_idx` (`formation` ASC)  COMMENT '',
  CONSTRAINT `fk_units_formations`
    FOREIGN KEY (`formation`)
    REFERENCES `appDB`.`formations` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `appDB`.`actions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `appDB`.`actions` ;

CREATE TABLE IF NOT EXISTS `appDB`.`actions` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `unit` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_actions_units1_idx` (`unit` ASC)  COMMENT '',
  CONSTRAINT `fk_actions_units1`
    FOREIGN KEY (`unit`)
    REFERENCES `appDB`.`units` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `appDB`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `appDB`.`users` ;

CREATE TABLE IF NOT EXISTS `appDB`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `rank` VARCHAR(45) NULL DEFAULT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `userscol_UNIQUE` (`name` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `appDB`.`events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `appDB`.`events` ;

CREATE TABLE IF NOT EXISTS `appDB`.`events` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `action` INT NOT NULL COMMENT '',
  `completed` TINYINT(1) NOT NULL COMMENT '',
  `start` DATE NOT NULL COMMENT '',
  `end` DATE NULL DEFAULT NULL COMMENT '',
  `user` INT NULL DEFAULT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_events_actions1_idx` (`action` ASC)  COMMENT '',
  INDEX `fk_events_users1_idx` (`user` ASC)  COMMENT '',
  CONSTRAINT `fk_events_actions1`
    FOREIGN KEY (`action`)
    REFERENCES `appDB`.`actions` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_events_users1`
    FOREIGN KEY (`user`)
    REFERENCES `appDB`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `appDB`.`comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `appDB`.`comments` ;

CREATE TABLE IF NOT EXISTS `appDB`.`comments` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `description` TEXT NOT NULL COMMENT '',
  `event` INT NOT NULL COMMENT '',
  `user` INT NOT NULL COMMENT '',
  `parent` INT NULL COMMENT '',
  `dateTime` DATETIME NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_comments_events1_idx` (`event` ASC)  COMMENT '',
  INDEX `fk_comments_users1_idx` (`user` ASC)  COMMENT '',
  INDEX `fk_comments_comments1_idx` (`parent` ASC)  COMMENT '',
  CONSTRAINT `fk_comments_events1`
    FOREIGN KEY (`event`)
    REFERENCES `appDB`.`events` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comments_users1`
    FOREIGN KEY (`user`)
    REFERENCES `appDB`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comments_comments1`
    FOREIGN KEY (`parent`)
    REFERENCES `appDB`.`comments` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- DUMMY DATA
-- -----------------------------------------------------

INSERT INTO `formations`(`id`, `name`) VALUES(1, "98 ΑΔΤΕ");
INSERT INTO `formations`(`id`, `name`) VALUES(2, "96 ΑΔΤΕ");
INSERT INTO `formations`(`id`, `name`) VALUES(3, "95 ΑΔΤΕ");
INSERT INTO `formations`(`id`, `name`) VALUES(4, "80 ΑΔΤΕ");

INSERT INTO `units`(`id`, `name`, `formation`) VALUES(1, "Μονάδα 1", 1);
INSERT INTO `units`(`id`, `name`, `formation`) VALUES(2, "Μονάδα 2", 1);
INSERT INTO `units`(`id`, `name`, `formation`) VALUES(3, "Μονάδα 1", 2);
INSERT INTO `units`(`id`, `name`, `formation`) VALUES(4, "Μονάδα 2", 2);
INSERT INTO `units`(`id`, `name`, `formation`) VALUES(5, "Μονάδα 3", 2);
INSERT INTO `units`(`id`, `name`, `formation`) VALUES(6, "Μονάδα 1", 3);
INSERT INTO `units`(`id`, `name`, `formation`) VALUES(7, "Μονάδα 2", 3);
INSERT INTO `units`(`id`, `name`, `formation`) VALUES(8, "Μονάδα 1", 4);


INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(1, "Τροφοδοσία", 1);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(2, "Καύσιμα", 1);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(3, "Τροφοδοσία", 2);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(4, "Καύσιμα", 2);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(5, "Τροφοδοσία", 3);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(6, "Καύσιμα", 3);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(7, "Τροφοδοσία", 4);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(8, "Καύσιμα", 4);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(9, "Τροφοδοσία", 5);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(10, "Καύσιμα", 5);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(11, "Τροφοδοσία", 6);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(12, "Καύσιμα", 6);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(13, "Τροφοδοσία", 7);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(14, "Καύσιμα", 7);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(15, "Τροφοδοσία", 8);
INSERT INTO `actions`(`id`, `name`, `unit`) VALUES(16, "Καύσιμα", 8);

INSERT INTO `users`(`id`, `name`, `rank`) VALUES(1, 'Petros Megistanos', 'ΑΝΤΙΣΤΡΑΤΗΓΟΣ');
INSERT INTO `users`(`id`, `name`, `rank`) VALUES(2, 'Nikos Koronas', 'ΑΝΤΙΣΤΡΑΤΗΓΟΣ');

INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(1, 'Founder & cio', 1, 0, '2017-11-20', NULL);
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(2, 'Giacommo', 1, 1, '2017-03-21', '2017-03-21');
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(3, 'Mariah', 1, 1, '2017-03-20', '2017-03-20');
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(4, 'Sth else re pousti!', 1, 1, '2017-03-20', '2017-03-22');
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(5, 'Marco Botton', 1, 0, '2009-12-29', NULL);
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(6, 'Founder & cio', 2, 0, '2017-11-20', NULL);
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(7, 'Marco Botto', 2, 0, '2017-03-21', NULL);
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(8, 'Giacommo', 2, 1, '2017-03-20', '2017-03-21');
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(9, 'Sth else 2', 2, 1, '2017-03-20', '2017-03-22');
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(10, 'Mariah', 2, 1, '2009-12-29', '2017-03-20');

INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(11, 'Founder & cioasdas', 11, 0, '2017-11-20', NULL);
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(12, 'Giacommo!!', 11, 0, '2017-03-21', NULL);
INSERT INTO `events`(`id`, `name`, `action`, `completed`, `start`, `end`) VALUES(13, 'Mariah2323', 3, 0, '2017-03-20', NULL);

INSERT INTO `comments`(`id`, `description`, `event`, `user`, `parent`, `dateTime`) VALUES(1, 'Περιγραφή event!! Κάτι πρέπει να προσθέσω για να φανεί κάτι!!', 1, 1, null, '2016-03-27 15:45');
INSERT INTO `comments`(`id`, `description`, `event`, `user`, `parent`, `dateTime`) VALUES(5, 'Υποσχόλιο για δοκιμή. Κάτι θα προστεθεί. Τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ!', 1, 2, 1, '2016-03-27 15:53');
INSERT INTO `comments`(`id`, `description`, `event`, `user`, `parent`, `dateTime`) VALUES(2, 'Υποσχόλιο event για δοκιμή 2. Κάτι θα προστεθεί. Τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ τεστ', 1, 1, 1, '2016-03-28 12:30');
INSERT INTO `comments`(`id`, `description`, `event`, `user`, `parent`, `dateTime`) VALUES(3, 'Προσθήκη νέου σχολίου ρίζα. Κάτι έπρεπε να βάλω για δοκιμή event', 1, 2, null, '2016-03-27 17:20');
INSERT INTO `comments`(`id`, `description`, `event`, `user`, `parent`, `dateTime`) VALUES(4, 'ΤΕΛΟΣ event!!', 1, 1, null, '2016-03-27 17:20');

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
